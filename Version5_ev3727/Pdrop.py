import numpy as np 
import matplotlib.pyplot as plt 


# Données brutes sous forme de chaîne de caractères
#Sans pressure drop
raw_data_0 = """ PCOOL:   10800000.0       10800000.0       10800000.0       10800000.0       10800000.0       10800000.0       10800000.0       10800000.0       10800000.0       10800000.0    
 VCOOL:   6.96394300       6.96632719       6.97382307       6.98558140       7.00102568       7.01975060       7.04146147       7.06593800       7.09301472       7.12256336    
 DCOOL:   1005.20459       1004.86060       1003.78046       1002.09088       999.880249       997.213135       994.138428       990.694702       986.912842       982.818542    
 TCOOL:   274.316589       281.875763       289.446320       297.021637       304.598358       312.174561       319.748535       327.318726       334.883484       342.441254    
 EPS:   0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000    
 XFL:   0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000    
 TSAT:   589.856201       589.856201       589.856201       589.856201       589.856201       589.856201       589.856201       589.856201       589.856201       589.856201    
 MUT:  -3.19978148E-14   9.18340949E-41  -3.19978148E-14   9.18340949E-41   0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000    
 HCOOL:   31459.9121       62919.8242       94379.7344       125839.648       157299.562       188759.469       220219.375       251679.281       283139.219       314599.156    
"""

#sans correction sur PHIL0
raw_data_1 = """
PCOOL:   11133639.0       11105720.0       11077536.0       11049058.0       11020256.0       10991092.0       10961527.0       10931981.0       10864543.0       10800000.0    
 VCOOL:   9.23594475       9.37605095       9.52523804       9.68450356       9.85514355       10.0387049       10.2369385       10.3921404       15.0614395       17.8875484    
 DCOOL:   757.923035       746.596680       734.902893       722.816772       710.301270       697.314453       683.807983       673.435791       464.872528       391.346863    
 TCOOL:   553.080688       559.106567       564.996277       570.734009       576.305420       581.693726       586.879822       590.587402       590.302124       589.856201    
 EPS:   0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000      0.341502070      0.462131977    
 XFL:   0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       4.52076010E-02   7.21197426E-02
 TSAT:   592.139404       591.950378       591.759216       591.565674       591.369507       591.170471       590.968323       590.765869       590.302124       589.856201    
 MUT:   9.51533802E-05   9.26515277E-05   9.02209795E-05   8.78502251E-05   8.55268081E-05   8.32387595E-05   8.09743869E-05   7.92974461E-05   7.94375665E-05   7.96065724E-05
 HCOOL:   1249701.12       1281198.12       1312696.00       1344195.00       1375695.12       1407196.38       1438699.25       1470202.75       1501785.25       1533396.88    
"""
#avec correction sur la paramètre PHIL0
raw_data_m = """
PCOOL:   11207186.0       11179270.0       11151089.0       11122615.0       11093816.0       11064657.0       11035097.0       11005434.0       10940325.0       10800000.0    
 VCOOL:   9.23476601       9.37476921       9.52384472       9.68295288       9.85341263       10.0367680       10.2347813       10.4067392       14.7948818       17.9014568    
 DCOOL:   758.025024       746.704956       735.016479       722.938232       710.430908       697.453857       683.959595       672.663574       473.283447       391.040314    
 TCOOL:   553.086548       559.114197       565.006897       570.746948       576.321411       581.713074       586.902649       590.935547       590.823059       589.856201    
 EPS:   0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000      0.326680690      0.462631196    
 XFL:   0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       0.00000000       4.28565145E-02   7.22542554E-02
 TSAT:   592.635498       592.447510       592.257324       592.064819       591.869690       591.671753       591.470642       591.268433       590.823059       589.856201    
 MUT:   9.51747134E-05   9.26733555E-05   9.02430183E-05   8.78729988E-05   8.55503094E-05   8.32631995E-05   8.10001075E-05   7.91772909E-05   7.92399660E-05   7.96065724E-05
 HCOOL:   1249701.12       1281198.12       1312696.12       1344195.12       1375695.25       1407196.50       1438699.25       1470202.75       1501779.75       1533567.50    """


# Traitement de chaque ligne pour extraire les valeurs numériques
def extraire(var_name, line_nb, data_name):
    data_lines = data_name.strip().split("\n")
    values = data_lines[line_nb].split(":")[1]
    # Séparation des valeurs en une liste de flottants
    for value in values.split():
        var_name.append(float(value))
    return

# Affichage du tableau des valeurs triées
PCOOLm=[]
PCOOL1=[]
PCOOL0=[]
DCOOL0=[]
extraire(PCOOLm, 0, raw_data_m)
extraire(PCOOL1, 0, raw_data_1)
extraire(PCOOL0, 0, raw_data_0)
extraire(DCOOL0, 2, raw_data_0)
Prho0=[0 for i in range(len(PCOOL0))]
Prho0[-1]=PCOOL0[-1]
Grad=0
for i in range(2,1+len(PCOOL0)):
    Grad +=0.22*DCOOL0[-i]*9.81
    Prho0[-i]=(PCOOL0[i-1]+Grad)
"""extraire(VCOOL, 1)
extraire(DCOOL, 2)
extraire(TCOOL, 3)
extraire(EPS, 4)
extraire(XFL, 5)
extraire(TSAT, 6)
extraire(MUT, 7)"""
Zaxis=np.linspace(0,2,len(PCOOLm))

fig, ax = plt.subplots()
ax.plot(Zaxis,PCOOLm, label='PhiM')
ax.plot(Zaxis,PCOOL1, label='PhiM=1')
ax.plot(Zaxis,Prho0, label='Sans chute de pression')
ax.set_xlabel("Axial position in m")
ax.set_ylabel("Pressure in Pa")
ax.set_title("Effect of Pressure Drop and Martinellis Coefficient")
ax.grid()
ax.legend(loc="best")
plt.show()
fig.savefig(rf'/home/p122173/Version5_BWR/Version5_ev3727/Donjon/data/results_marie/Ppdrop.png', bbox_inches='tight')


